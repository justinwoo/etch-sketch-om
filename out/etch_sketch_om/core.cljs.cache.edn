;; Analyzed by ClojureScript 0.0-2657
{:defs {t4999 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/t4999, :file "src/etch_sketch_om/core.cljs", :type true, :anonymous true, :column 3, :line 26, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t5009 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/->t5009, :variadic false, :file "src/etch_sketch_om/core.cljs", :method-params ([height width map__5008 trail svg cursor map__5007 props etch-sketch meta5010]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag etch-sketch-om.core/t5009, :variadic false, :max-fixed-arity 10}), :line 35, :max-fixed-arity 10, :fn-var true, :arglists (quote ([height width map__5008 trail svg cursor map__5007 props etch-sketch meta5010])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, ->t4999 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/->t4999, :variadic false, :file "src/etch_sketch_om/core.cljs", :method-params ([props etch-trail meta5000]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag etch-sketch-om.core/t4999, :variadic false, :max-fixed-arity 3}), :line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([props etch-trail meta5000])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, etch-sketch {:protocol-inline nil, :name etch-sketch-om.core/etch-sketch, :variadic false, :file "src/etch_sketch_om/core.cljs", :end-column 19, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag etch-sketch-om.core/t5009, :variadic false, :max-fixed-arity 1}), :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props])), :test true}, increment {:doc "increment that our sketch works off of", :file "src/etch_sketch_om/core.cljs", :line 43, :column 1, :end-line 43, :end-column 16, :test true, :name etch-sketch-om.core/increment}, mark-trail {:protocol-inline nil, :name etch-sketch-om.core/mark-trail, :variadic false, :file "src/etch_sketch_om/core.cljs", :end-column 18, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 0}), :line 85, :end-line 85, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :test true}, etch-point {:protocol-inline nil, :name etch-sketch-om.core/etch-point, :variadic false, :file "src/etch_sketch_om/core.cljs", :end-column 18, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag etch-sketch-om.core/t4993, :variadic false, :max-fixed-arity 1}), :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props])), :test true}, ->t5004 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/->t5004, :variadic false, :file "src/etch_sketch_om/core.cljs", :method-params ([height width map__5003 trail svg cursor map__5002 props etch-sketch meta5005]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag etch-sketch-om.core/t5004, :variadic false, :max-fixed-arity 10}), :line 35, :max-fixed-arity 10, :fn-var true, :arglists (quote ([height width map__5003 trail svg cursor map__5002 props etch-sketch meta5005])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, move-cursor {:protocol-inline nil, :name etch-sketch-om.core/move-cursor, :variadic false, :file "src/etch_sketch_om/core.cljs", :end-column 19, :method-params ([axis operator]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 2}), :line 68, :end-line 68, :max-fixed-arity 2, :fn-var true, :arglists (quote ([axis operator])), :test true}, handleKeydown {:protocol-inline nil, :name etch-sketch-om.core/handleKeydown, :variadic false, :file "src/etch_sketch_om/core.cljs", :end-column 21, :method-params ([keyCode]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag #{nil any clj-nil}, :variadic false, :max-fixed-arity 1}), :line 101, :end-line 101, :max-fixed-arity 1, :fn-var true, :arglists (quote ([keyCode])), :test true}, ->t5012 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/->t5012, :variadic false, :file "src/etch_sketch_om/core.cljs", :method-params ([owner app meta5013]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag etch-sketch-om.core/t5012, :variadic false, :max-fixed-arity 3}), :line 55, :max-fixed-arity 3, :fn-var true, :arglists (quote ([owner app meta5013])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, axis-to-dimension {:doc "axis to dimension translation hashmap", :file "src/etch_sketch_om/core.cljs", :line 63, :column 1, :end-line 63, :end-column 24, :test true, :name etch-sketch-om.core/axis-to-dimension}, ->t4989 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/->t4989, :variadic false, :file "src/etch_sketch_om/core.cljs", :method-params ([fill y x height width map__4988 props etch-point meta4990]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag etch-sketch-om.core/t4989, :variadic false, :max-fixed-arity 9}), :line 15, :max-fixed-arity 9, :fn-var true, :arglists (quote ([fill y x height width map__4988 props etch-point meta4990])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t5012 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/t5012, :file "src/etch_sketch_om/core.cljs", :type true, :anonymous true, :column 5, :line 55, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t4993 {:num-fields 9, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/t4993, :file "src/etch_sketch_om/core.cljs", :type true, :anonymous true, :column 5, :line 15, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, t4996 {:num-fields 3, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/t4996, :file "src/etch_sketch_om/core.cljs", :type true, :anonymous true, :column 3, :line 26, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, app-state {:file "src/etch_sketch_om/core.cljs", :line 47, :column 1, :end-line 47, :end-column 16, :test true, :name etch-sketch-om.core/app-state}, t4989 {:num-fields 9, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/t4989, :file "src/etch_sketch_om/core.cljs", :type true, :anonymous true, :column 5, :line 15, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, etch-trail {:protocol-inline nil, :name etch-sketch-om.core/etch-trail, :variadic false, :file "src/etch_sketch_om/core.cljs", :end-column 18, :method-params ([props]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag etch-sketch-om.core/t4999, :variadic false, :max-fixed-arity 1}), :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([props])), :test true}, KeyCodes {:doc "keycodes that we care about for the keydown event", :file "src/etch_sketch_om/core.cljs", :line 94, :column 1, :end-line 94, :end-column 15, :test true, :name etch-sketch-om.core/KeyCodes}, same-point-value {:protocol-inline nil, :name etch-sketch-om.core/same-point-value, :variadic false, :file "src/etch_sketch_om/core.cljs", :end-column 24, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :methods ({:tag boolean, :variadic false, :max-fixed-arity 2}), :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :test true}, ->t4993 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/->t4993, :variadic false, :file "src/etch_sketch_om/core.cljs", :method-params ([fill y x height width map__4992 props etch-point meta4994]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 5, :factory :positional, :methods ({:tag etch-sketch-om.core/t4993, :variadic false, :max-fixed-arity 9}), :line 15, :max-fixed-arity 9, :fn-var true, :arglists (quote ([fill y x height width map__4992 props etch-point meta4994])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t5009 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/t5009, :file "src/etch_sketch_om/core.cljs", :type true, :anonymous true, :column 5, :line 35, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t4996 {:protocol-inline nil, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/->t4996, :variadic false, :file "src/etch_sketch_om/core.cljs", :method-params ([props etch-trail meta4997]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 3, :factory :positional, :methods ({:tag etch-sketch-om.core/t4996, :variadic false, :max-fixed-arity 3}), :line 26, :max-fixed-arity 3, :fn-var true, :arglists (quote ([props etch-trail meta4997])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :test true}, t5004 {:num-fields 10, :protocols #{om.core/IRender cljs.core/IMeta cljs.core/IWithMeta}, :name etch-sketch-om.core/t5004, :file "src/etch_sketch_om/core.cljs", :type true, :anonymous true, :column 5, :line 35, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :name etch-sketch-om.core, :doc nil, :excludes #{}, :use-macros nil, :require-macros {dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :uses nil, :requires {events goog.events, goog.events goog.events, dom om.dom, om.dom om.dom, om.core om.core, om om.core}, :imports nil}